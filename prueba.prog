principal{

    ent via , vib = 3;
    real vf ;
    car vc ;
    booleano vb ;
    ent lista[4]  l1 =[3,4,6,1];
    real lista[1]  l2 =[3.1];
    car lista[2]  l3 =['r', 'e'];
    booleano lista[2]  l4 =[verdadero, falso];

    l1[1] = 3 + vib;


    ent funcionA (ent e1, real r2, car c3){
        ent x1, x2 ;
        
        car funcionB (car b1, booleano b2){
        
            real xf, x2 ;
            
            car funcionC(car c){
                car x = li[1] + 1;
                devolver x;
            }
            
            real x1 ;
            
            x1= 1.3 ;
            si c2 > 10{
                c2 = c2 - 1 ;
            }sino{
                x1= 3.1 ;
            }
            devolver x1;
        }
        devolver x1 ;
    }

    real funcionD(real x){
    
        devolver x;
    }

    real funcionE(real x){
        real y = x + 1.2;
        devolver y;
    }

    funcionA(funcionB(funcionC('r'), verdadero), funcionD(funcionE(3.2)), 'c');

    xf= funcionC (verdadero, 10);
    x2= xf*(funcionC(false,1)-funcionC(true,23))/10.0;
    mientras (x2*funcionC(false,1)-xf <10.0){
        x2= x2*xf ;
    }

    devolver 0;
    }
    
